package Lab3;
import java.awt.*;
import simView.*;

// 시각적으로 표현할 수 있는 코드 부분이다.

public class gproc extends ViewableDigraph // ViewableDigrap 가 시뮬레이터에서 각 아토믹 모델을 연결짓는 부분.
{

	public gproc()
	{
		super("gpt");
    	
		// 변수를 선언하는 부분. 아토믹모델 상에서 g, p라고 부르겠다.
		
		// 각각의 아토믹모델(generator, processor ..)에서보다 Digraph에서 적용되는 시간대의 우선순위가 더 높다.
		// 그래서 여기서의 시간대가 먼저 적용된다.
		// 이건 연결되었을 때만 해당하는 사항이고. 각 아토믹모델 단독으로 시뮬레이터를 돌리면 여기의 시간은 적용되지않음.   
		ViewableAtomic g = new genr("g", 30);
		ViewableAtomic p = new proc("p", 40);
    	
		add(g);
		add(p);
		
		addCoupling(g, "out", p, "in"); // g의 out과 p의 in을 연결시켜주는 함
		addCoupling(p, "out", g, "in");
	}

    
    /**
     * Automatically generated by the SimView program.
     * Do not edit this manually, as such changes will get overwritten.
     */
    public void layoutForSimView()
    {
        preferredSize = new Dimension(988, 646); // 시뮬레이터에서 아토믹모델들이 있는 판(?)의 사이즈.
        ((ViewableComponent)withName("p")).setPreferredLocation(new Point(465, 476)); // 회색박스가 맨처음에 어디에 위치할지 포지션을 정해주는 함수.
        ((ViewableComponent)withName("g")).setPreferredLocation(new Point(59, 148));
    }
}
